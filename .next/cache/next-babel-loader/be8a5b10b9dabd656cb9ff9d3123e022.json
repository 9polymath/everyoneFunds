{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from \"../../ethereum/Campaign\";\nimport { Card, Grid, Button, Message, Form, Progress } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport { Link, Router } from '../../routes';\nimport everyoneFunds from \"../../ethereum/everyoneFunds\";\n\nclass CampaignShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onClick\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const address = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await address.methods.endCrowdfunding().send({\n          from: accounts[0]\n        });\n        await everyoneFunds.methods.removeDeployedCampaign().send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      name: summary[0],\n      description: summary[1],\n      minimumDonation: summary[2],\n      targetDonation: summary[3],\n      balance: summary[4],\n      requestCount: summary[5],\n      approversCount: summary[6],\n      manager: summary[7],\n      location: summary[8],\n      date: summary[9]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumDonation,\n      targetDonation,\n      requestCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create requests to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumDonation,\n      meta: 'Minimum Donation (wei)',\n      description: 'You must donate at least this much wei to become an approver'\n    }, {\n      header: web3.utils.fromWei(targetDonation, 'ether'),\n      meta: 'Target Donation (ether)',\n      description: 'This is how much the campaign manager intends to raise with this campaign.'\n    }, {\n      header: requestCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from this contract. Requests must be approved by approvers'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people that have donated to this contract.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h4\", null, \" Campaign Dashboard\"), __jsx(\"h2\", null, \" \", this.props.name), __jsx(\"p\", null, \" \", this.props.description), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(ContributeForm, {\n      address: this.props.address\n    }), __jsx(\"br\", null), __jsx(\"p\", null, __jsx(\"b\", null, \" \", this.props.location)), __jsx(\"p\", null, __jsx(\"b\", null, this.props.date)))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"View Requests\")))), __jsx(Grid.Column, {\n      width: 9\n    }, __jsx(Button, {\n      onClick: this.onClick,\n      loading: this.state.loading,\n      error: !!this.state.errorMessage,\n      negative: true\n    }, \"End Campaign\")))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/dolapoolaniawo/Desktop/noin/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","Message","Form","Progress","web3","ContributeForm","Link","Router","everyoneFunds","CampaignShow","errorMessage","loading","event","preventDefault","setState","address","props","accounts","eth","getAccounts","methods","endCrowdfunding","send","from","removeDeployedCampaign","pushRoute","err","message","getInitialProps","campaign","query","summary","getSummary","call","name","description","minimumDonation","targetDonation","balance","requestCount","approversCount","manager","location","date","renderCards","items","header","meta","style","overflowWrap","utils","fromWei","render","onClick","state"],"mappings":"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","sourcesContent":["import React, { Component }from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from \"../../ethereum/Campaign\";\nimport {Card, Grid, Button, Message, Form, Progress} from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport {Link, Router} from '../../routes';\nimport everyoneFunds from \"../../ethereum/everyoneFunds\";\n\nclass CampaignShow extends Component {\n    state={\n        errorMessage: '',\n        loading: false\n    };\n    static async getInitialProps(props){\n        const campaign = Campaign(props.query.address);\n        const summary =  await campaign.methods.getSummary().call();\n        return {\n            address: props.query.address,\n            name:summary[0],\n            description: summary[1],\n            minimumDonation: summary[2],\n            targetDonation: summary[3],\n            balance: summary[4],\n            requestCount: summary[5],\n            approversCount: summary[6],\n            manager: summary[7],\n            location: summary[8],\n            date: summary[9]\n        };\n    }\n    onClick = async (event) => {\n        event.preventDefault();\n        this.setState({loading:true, errorMessage: ''});\n        const address = Campaign(this.props.address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await address.methods\n                .endCrowdfunding()\n                .send({\n                    from: accounts[0]\n                });\n            await everyoneFunds.methods.removeDeployedCampaign().send({from: accounts[0]});\n            Router.pushRoute('/');\n        } catch (err) {\n            this.setState({errorMessage: err.message});\n        }\n        this.setState({loading:false});\n    };\n    renderCards(){\n        const {\n            balance,\n            manager,\n            minimumDonation,\n            targetDonation,\n            requestCount,\n            approversCount\n        } = this.props;\n        const items = [\n\n            {\n                header: manager,\n                meta: 'Address of Manager',\n            description: 'The manager created this campaign and can create requests to withdraw money',\n            style: {overflowWrap: 'break-word'}\n            },\n            {\n                header: minimumDonation,\n                meta: 'Minimum Donation (wei)',\n            description: 'You must donate at least this much wei to become an approver'\n            },\n            {\n                header: web3.utils.fromWei(targetDonation, 'ether'),\n                meta: 'Target Donation (ether)',\n            description: 'This is how much the campaign manager intends to raise with this campaign.'\n            },\n            {\n                header: requestCount,\n                meta: 'Number of Requests',\n            description: 'A request tries to withdraw money from this contract. Requests must be approved by approvers'\n            },\n            {\n                header: approversCount,\n                meta: 'Number of Approvers',\n            description: 'Number of people that have donated to this contract.'\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (ether)',\n            description: 'The balance is how much money this campaign has left to spend'\n            }\n\n        ];\n        return <Card.Group items={items}/>\n    }\n    render() {\n        return (\n            <Layout>\n                <h4> Campaign Dashboard</h4>\n                <h2> {this.props.name}</h2>\n                <p> {this.props.description}</p>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={10}>\n                            {this.renderCards()}\n                        </Grid.Column>\n                        <Grid.Column width={6}>\n                            <ContributeForm address={this.props.address}/>\n                            <br/>\n                            <p><b> {this.props.location}</b></p>\n                            <p><b>{this.props.date}</b></p>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={6}>\n                            <Link route={`/campaigns/${this.props.address}/requests`}>\n                                <a>\n                                    <Button primary>View Requests</Button>\n                                </a>\n                            </Link>\n                        </Grid.Column>\n                        <Grid.Column width={9}>\n                            <Button onClick = {this.onClick} loading={this.state.loading} error={!!this.state.errorMessage} negative>End Campaign</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}