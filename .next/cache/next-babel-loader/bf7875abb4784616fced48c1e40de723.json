{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumDonation: '',\n      targetDonation: '',\n      name: '',\n      description: '',\n      media: '',\n      location: '',\n      date: '',\n      links: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const {\n        minimumDonation,\n        targetDonation,\n        name,\n        description,\n        media,\n        location,\n        date,\n        links\n      } = this.state;\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await everyoneFunds.methods.createCampaign(minimumDonation, web3.utils.toWei(targetDonation, 'ether')).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \" Create a New Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \" Minimum Donation\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumDonation,\n      onChange: event => this.setState({\n        minimumDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Target Donation\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.targetDonation,\n      onChange: event => this.setState({\n        targetDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Campaign Name\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Media\"), __jsx(Input, {\n      value: this.state.media,\n      onChange: event => this.setState({\n        media: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Description\"), __jsx(TextArea, {\n      placeholder: \"Description of Campaign\",\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Location\"), __jsx(Input, {\n      value: this.state.location,\n      onChange: event => this.setState({\n        location: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Date\"), __jsx(Input, {\n      value: this.state.date,\n      onChange: event => this.setState({\n        date: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Relevant Links\"), __jsx(Input, {\n      value: this.state.links,\n      onChange: event => this.setState({\n        links: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/dolapoolaniawo/Desktop/noin/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Embed","Dropdown","TextArea","Layout","everyoneFunds","web3","Router","CampaignNew","minimumDonation","targetDonation","name","description","media","location","date","links","errorMessage","loading","event","preventDefault","setState","state","accounts","eth","getAccounts","methods","createCampaign","utils","toWei","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n    state ={\n        minimumDonation: '',\n        targetDonation: '',\n        name: '',\n        description: '',\n        media: '',\n        location: '',\n        date: '',\n        links: '',\n        errorMessage: '',\n        loading: false\n    };\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.setState({loading:true, errorMessage: ''});\n        const {minimumDonation,\n                targetDonation,\n                name,\n                description,\n                media,\n                location,\n                date,\n                links} = this.state;\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await everyoneFunds.methods\n                .createCampaign(minimumDonation, web3.utils.toWei(targetDonation, 'ether'))\n                .send({\n                    from: accounts[0]\n                });\n            Router.pushRoute('/');\n        } catch (err) {\n            this.setState({errorMessage: err.message});\n        }\n        this.setState({loading:false});\n    };\n    render() {\n        return (\n            <Layout>\n                <h3> Create a New Campaign</h3>\n                <Form onSubmit = {this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label> Minimum Donation</label>\n                        <Input label=\"wei\"\n                               labelPosition=\"right\"\n                               value={this.state.minimumDonation}\n                               onChange={event =>\n                                 this.setState({minimumDonation: event.target.value})}\n                        />\n                        <label> Target Donation</label>\n                        <Input label=\"ether\"\n                               labelPosition=\"right\"\n                               value={this.state.targetDonation}\n                               onChange={event =>\n                                 this.setState({targetDonation: event.target.value})}\n                        />\n                        <label> Campaign Name</label>\n                        <Input\n                               value={this.state.name}\n                               onChange={event =>\n                                 this.setState({name: event.target.value})}\n                        />\n                        <label> Media</label>\n                        <Input\n                               value={this.state.media}\n                               onChange={event =>\n                                 this.setState({media: event.target.value})}\n                        />\n                        <label> Description</label>\n                        <TextArea\n                               placeholder = 'Description of Campaign'\n                               value={this.state.description}\n                               onChange={event =>\n                                 this.setState({description: event.target.value})}\n                        />\n                        <label> Location</label>\n                        <Input\n                               value={this.state.location}\n                               onChange={event =>\n                                 this.setState({location: event.target.value})}\n                        />\n                        <label> Date</label>\n                        <Input\n                               value={this.state.date}\n                               onChange={event =>\n                                 this.setState({date: event.target.value})}\n                        />\n                        <label> Relevant Links</label>\n                        <Input\n                               value={this.state.links}\n                               onChange={event =>\n                                 this.setState({links: event.target.value})}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                    <Button loading={this.state.loading} primary>Create</Button>\n                </Form>\n             </Layout>\n        );\n    }\n}\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}