{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const name = this.name.value;\n      const description = this.description.value;\n      const media = this.media.value;\n      const location = this.location.value;\n      const date = this.date.value;\n      const links = this.links.value;\n      const {\n        minimumDonation,\n        targetDonation\n      } = this.state;\n      const info = {\n        name: name,\n        description: description,\n        media: media,\n        location: location,\n        date: date,\n        links: links\n      };\n      const data = [...this.state.data];\n      data.push(info);\n      this.setState({\n        data: data\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await everyoneFunds.methods.createCampaign(minimumDonation, web3.utils.toWei(targetDonation, 'ether')).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      minimumDonation: '',\n      targetDonation: '',\n      name: '',\n      description: '',\n      media: '',\n      location: '',\n      date: '',\n      links: '',\n      errorMessage: '',\n      loading: false\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \" Create a New Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \" Minimum Donation\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumDonation,\n      onChange: event => this.setState({\n        minimumDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Target Donation\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.targetDonation,\n      onChange: event => this.setState({\n        targetDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Campaign Name\"), __jsx(Input, {\n      ref: input => this.name = input,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Media\"), __jsx(Input, {\n      ref: input => this.media = input,\n      onChange: event => this.setState({\n        media: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Description\"), __jsx(TextArea, {\n      ref: input => this.description = input,\n      placeholder: \"Description of Campaign\",\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Location\"), __jsx(Input, {\n      ref: input => this.location = input,\n      onChange: event => this.setState({\n        location: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Date\"), __jsx(Input, {\n      ref: input => this.date = input,\n      onChange: event => this.setState({\n        date: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Relevant Links\"), __jsx(Input, {\n      ref: input => this.links = input,\n      onChange: event => this.setState({\n        links: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/dolapoolaniawo/Desktop/noin/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Embed","Dropdown","TextArea","Layout","everyoneFunds","web3","Router","CampaignNew","constructor","props","event","preventDefault","setState","loading","errorMessage","name","value","description","media","location","date","links","minimumDonation","targetDonation","state","info","data","push","accounts","eth","getAccounts","methods","createCampaign","utils","toWei","send","from","pushRoute","err","message","render","onSubmit","target","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n    constructor(props){\n    super(props);\n        this.state ={\n            minimumDonation: '',\n            targetDonation: '',\n            name: '',\n            description: '',\n            media: '',\n            location: '',\n            date: '',\n            links: '',\n            errorMessage: '',\n            loading: false\n        };\n    }\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.setState({loading:true, errorMessage: ''});\n        const name = this.name.value;\n        const description = this.description.value;\n        const media = this.media.value;\n        const location = this.location.value;\n        const date = this.date.value;\n        const links = this.links.value;\n        const {minimumDonation,\n                targetDonation} = this.state;\n        const info = {name: name, description: description, media: media, location: location, date: date, links: links};\n        const data = [...this.state.data];\n        data.push(info);\n            this.setState({data: data});\n        try {\n            const accounts = await web3.eth.getAccounts();\n\n            await everyoneFunds.methods\n                .createCampaign(minimumDonation, web3.utils.toWei(targetDonation, 'ether'))\n                .send({\n                    from: accounts[0]\n                });\n            Router.pushRoute('/');\n        } catch (err) {\n            this.setState({errorMessage: err.message});\n        }\n        this.setState({loading:false});\n    };\n    render() {\n        return (\n            <Layout>\n                <h3> Create a New Campaign</h3>\n                <Form onSubmit = {this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label> Minimum Donation</label>\n                        <Input label=\"wei\"\n                               labelPosition=\"right\"\n                               value={this.state.minimumDonation}\n                               onChange={event =>\n                                 this.setState({minimumDonation: event.target.value})}\n                        />\n                        <label> Target Donation</label>\n                        <Input label=\"ether\"\n                               labelPosition=\"right\"\n                               value={this.state.targetDonation}\n                               onChange={event =>\n                                 this.setState({targetDonation: event.target.value})}\n                        />\n                        <label> Campaign Name</label>\n                        <Input ref={input => this.name = input}\n                               onChange={event =>\n                                 this.setState({name: event.target.value})}\n                        />\n                        <label> Media</label>\n                        <Input ref={input => this.media = input}\n                               onChange={event =>\n                                 this.setState({media: event.target.value})}\n                        />\n                        <label> Description</label>\n                        <TextArea\n                               ref={input => this.description = input}\n                               placeholder = 'Description of Campaign'\n                               onChange={event =>\n                                 this.setState({description: event.target.value})}\n                        />\n                        <label> Location</label>\n                        <Input ref={input => this.location = input}\n                               onChange={event =>\n                                 this.setState({location: event.target.value})}\n                        />\n                        <label> Date</label>\n                        <Input ref={input => this.date = input}\n                               onChange={event =>\n                                 this.setState({date: event.target.value})}\n                        />\n                        <label> Relevant Links</label>\n                        <Input ref={input => this.links = input}\n                               onChange={event =>\n                                 this.setState({links: event.target.value})}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                    <Button loading={this.state.loading} primary>Create</Button>\n                </Form>\n             </Layout>\n        );\n    }\n}\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}