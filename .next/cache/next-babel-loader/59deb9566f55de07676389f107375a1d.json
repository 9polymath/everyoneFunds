{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      description: '',\n      minimumDonation: '',\n      targetDonation: '',\n      location: '',\n      date: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const {\n        name,\n        description,\n        minimumDonation,\n        targetDonation,\n        location,\n        date\n      } = this.state;\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await everyoneFunds.methods.createCampaign(name, description, minimumDonation, web3.utils.toWei(targetDonation, 'ether'), location, date).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \" Create a New Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \" Campaign Name\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Campaign Description\"), __jsx(TextArea, {\n      value: this.state.description,\n      placeholder: \"Description of Campaign\",\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Minimum Donation\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumDonation,\n      onChange: event => this.setState({\n        minimumDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Target Donation\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.targetDonation,\n      onChange: event => this.setState({\n        targetDonation: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Location\"), __jsx(Input, {\n      value: this.state.location,\n      onChange: event => this.setState({\n        location: event.target.value\n      })\n    }), __jsx(\"label\", null, \" Start date\"), __jsx(Input, {\n      value: this.state.date,\n      onChange: event => this.setState({\n        date: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/dolapoolaniawo/Desktop/noin/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Embed","Dropdown","TextArea","Layout","everyoneFunds","web3","Router","CampaignNew","name","description","minimumDonation","targetDonation","location","date","errorMessage","loading","event","preventDefault","setState","state","accounts","eth","getAccounts","methods","createCampaign","utils","toWei","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Embed, Dropdown, TextArea } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport everyoneFunds from '../../ethereum/everyoneFunds';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n    state ={\n        name: '',\n        description: '',\n        minimumDonation: '',\n        targetDonation: '',\n        location: '',\n        date: '',\n        errorMessage: '',\n        loading: false\n    };\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.setState({loading:true, errorMessage: ''});\n        const {name, description, minimumDonation, targetDonation, location, date} = this.state;\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await everyoneFunds.methods\n                .createCampaign(name, description, minimumDonation, web3.utils.toWei(targetDonation, 'ether'), location, date)\n                .send({\n                    from: accounts[0]\n                });\n            Router.pushRoute('/');\n        } catch (err) {\n            this.setState({errorMessage: err.message});\n        }\n        this.setState({loading:false});\n    };\n    render() {\n        return (\n            <Layout>\n                <h3> Create a New Campaign</h3>\n                <Form onSubmit = {this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label> Campaign Name</label>\n                        <Input\n                               value={this.state.name}\n                               onChange={event =>\n                                 this.setState({name: event.target.value})}\n                        />\n                        <label> Campaign Description</label>\n                        <TextArea\n                               value={this.state.description}\n                               placeholder = 'Description of Campaign'\n                               onChange={event =>\n                                 this.setState({description: event.target.value})}\n                        />\n                        <label> Minimum Donation</label>\n                        <Input label=\"wei\"\n                               labelPosition=\"right\"\n                               value={this.state.minimumDonation}\n                               onChange={event =>\n                                 this.setState({minimumDonation: event.target.value})}\n                        />\n                        <label> Target Donation</label>\n                        <Input label=\"ether\"\n                               labelPosition=\"right\"\n                               value={this.state.targetDonation}\n                               onChange={event =>\n                                 this.setState({targetDonation: event.target.value})}\n                        />\n                        <label> Location</label>\n                        <Input\n                               value={this.state.location}\n                               onChange={event =>\n                                 this.setState({location: event.target.value})}\n                        />\n                        <label> Start date</label>\n                        <Input\n                               value={this.state.date}\n                               onChange={event =>\n                                 this.setState({date: event.target.value})}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}/>\n                    <Button loading={this.state.loading} primary>Create</Button>\n                </Form>\n             </Layout>\n        );\n    }\n}\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}